# Generated by Django 5.1.5 on 2025-02-09 06:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='BannerOnTheMainPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, max_length=600)),
                ('is_active', models.CharField(choices=[('True', 'Активен'), ('False', 'Не активен')], default='True', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('episode_number', models.IntegerField(choices=[(1, '1 серия'), (2, '2 серия'), (3, '3 серия'), (4, '4 серия'), (5, '5 серия'), (6, '6 серия'), (7, '7 серия'), (8, '8 серия'), (9, '9 серия'), (10, '10 серия'), (11, '11 серия'), (12, '12 серия'), (13, '13 серия'), (14, '14 серия'), (15, '15 серия'), (16, '16 серия'), (17, '17 серия'), (18, '18 серия'), (19, '19 серия'), (20, '20 серия'), (21, '21 серия'), (22, '22 серия'), (23, '23 серия'), (24, '24 серия')], default=1)),
                ('name', models.CharField(max_length=100)),
                ('iframe', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('eng_name', models.CharField(blank=True, max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('eng_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='VoiceActor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('eng_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('login', models.CharField(blank=True, max_length=100)),
                ('nickname', models.CharField(blank=True, max_length=100)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('simple_url', models.CharField(max_length=50, unique=True)),
                ('type', models.CharField(choices=[('anime', 'Аниме'), ('podcast', 'Подкаст'), ('serials', 'Сериал'), ('film', 'Фильм')], default='anime', max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=600)),
                ('year_of_release', models.IntegerField(default=2025)),
                ('age', models.CharField(choices=[('0', '0+'), ('12', '12+'), ('14', '14+'), ('16', '16+'), ('18', '18+')], default='16', max_length=3)),
                ('lasting', models.CharField(default='24 минуты', max_length=20)),
                ('banners', models.ManyToManyField(blank=True, to='rubka.banner')),
                ('comments', models.ManyToManyField(blank=True, to='rubka.comment')),
                ('episodes', models.ManyToManyField(blank=True, to='rubka.episode')),
                ('genre', models.ManyToManyField(blank=True, to='rubka.genre')),
                ('studio', models.ManyToManyField(blank=True, to='rubka.studio')),
                ('voice_actors', models.ManyToManyField(blank=True, to='rubka.voiceactor')),
            ],
        ),
    ]
